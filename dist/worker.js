!function(t){var e={};function o(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)o.d(n,s,function(e){return t[e]}.bind(null,s));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=7)}([function(t,e,o){"use strict";var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n)return n;throw new Error("unable to locate global object")}();t.exports=e=n.fetch,n.fetch&&(e.default=n.fetch.bind(n)),e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response},function(t,e){t.exports={Router:(t={})=>new Proxy(t,{get:(t,e,o)=>"handle"===e?async(e,...o)=>{for(let[n,s]of t.r.filter(t=>t[2]===e.method||"ALL"===t[2])){let t,r,a;if(t=(a=new URL(e.url)).pathname.match(n)){e.params=t.groups,e.query=e.query||Object.fromEntries(a.searchParams.entries());for(let t of s)if(void 0!==(r=await t(e.proxy||e,...o)))return r}}}:(n,...s)=>(t.r=t.r||[]).push([`^${((t.base||"")+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/$3]+)$2$3")}/*$`,s,e.toUpperCase()])&&o})}},function(t,e,o){const n=o(0);t.exports.getCompany=async t=>{let e=null;try{const o=await n("https://rt.data.gov.hk/v1/transport/citybus-nwfb/company/"+t.toUpperCase());o&&(e=await o.json())}catch(t){console.log("error = ",t)}return e}},function(t,e,o){const n=o(0);t.exports.getBusRoute=async(t,e)=>{let o=null;try{const s=await n(`https://rt.data.gov.hk/v1/transport/citybus-nwfb/route/${t.toUpperCase()}/${e}`);s&&(o=await s.json())}catch(t){console.log("error = ",t)}return o}},function(t,e,o){const n=o(0);t.exports.getBusRouteStop=async(t,e,o)=>{let s=null;try{const r=await n(`https://rt.data.gov.hk/v1/transport/citybus-nwfb/route-stop/${t.toUpperCase()}/${e}/${o}`);r&&(s=await r.json())}catch(t){console.log("error = ",t)}return s}},function(t,e,o){const n=o(0);t.exports.getBusStop=async t=>{let e=null;try{const o=await n("https://rt.data.gov.hk/v1/transport/citybus-nwfb/stop/"+t);o&&(e=await o.json())}catch(t){console.log("error = ",t)}return e}},function(t,e,o){const n=o(0);t.exports.getEstimateTimeArrival=async(t,e,o)=>{let s=null;try{const r=await n(`https://rt.data.gov.hk/v1/transport/citybus-nwfb/eta/${t}/${o}/${e}`);r&&(s=await r.json())}catch(t){console.log("error = ",t)}return s}},function(t,e,o){"use strict";o.r(e);var n=o(1),s=o(2),r=o(3),a=o(4),u=o(5),c=o(6);const i=Object(n.Router)();i.get("/",()=>new Response(JSON.stringify({message:"hongkong-bus-arrival-api"}),{headers:{"Content-type":"application/json"},status:200})),i.get("/company",async t=>{let e=null;const{searchParams:o}=new URL(t.url),n=o.get("companyId");if(console.log("companyId = ",n),n){const t=await Object(s.getCompany)(n);console.log("getCompanyResult = ",t);let o={};t&&(o=t.data);const r={message:"getCompany",company:o};e=new Response(JSON.stringify(r),{headers:{"Content-type":"application/json"},status:200})}else{const t={message:"getCompany error, no companyId"};e=new Response(JSON.stringify(t),{headers:{"Content-type":"application/json"},status:400})}return e}),i.get("/bus-route",async t=>{let e=null;const{searchParams:o}=new URL(t.url),n=o.get("companyId"),s=o.get("routeStr");if(console.log("companyId = ",n),console.log("routeStr = ",s),n&&s){const t=await Object(r.getBusRoute)(n,s);console.log("getBusRouteResult = ",t);let o={};t&&(o=t.data);const a={message:"getBusRoute",busRoute:o};e=new Response(JSON.stringify(a),{headers:{"Content-type":"application/json"},status:200})}else{const t={message:"getBusRoute error, no companyId and routeStr"};e=new Response(JSON.stringify(t),{headers:{"Content-type":"application/json"},status:400})}return e}),i.get("/bus-route-stop",async t=>{let e=null;const{searchParams:o}=new URL(t.url),n=o.get("companyId"),s=o.get("routeStr"),r=o.get("direction");if(console.log("companyId = ",n),console.log("routeStr = ",s),console.log("direction = ",r),n&&s&&r){const t=await Object(a.getBusRouteStop)(n,s,r);console.log("getBusRouteStopResult = ",t);let o={};t&&(o=t.data);const u={message:"getBusRouteStop",busRouteStop:o};e=new Response(JSON.stringify(u),{headers:{"Content-type":"application/json"},status:200})}else{const t={message:"getBusRouteStop error, no companyId and routeStr and direction"};e=new Response(JSON.stringify(t),{headers:{"Content-type":"application/json"},status:400})}return e}),i.get("/bus-stop/:busStopId",async({params:t})=>{let e=null;const o=t.busStopId;if(console.log("busStopId = ",o),o){const t=await Object(u.getBusStop)(o);console.log("getBusStopResult = ",t);let n={};t&&(n=t.data);const s={message:"getBusStop",busStop:n};e=new Response(JSON.stringify(s),{headers:{"Content-type":"application/json"},status:200})}else{const t={message:"getBusStop error, no busStopId"};e=new Response(JSON.stringify(t),{headers:{"Content-type":"application/json"},status:400})}return e}),i.get("/bus-arrival-time",async t=>{let e=null;const{searchParams:o}=new URL(t.url),n=o.get("companyId"),s=o.get("routeStr"),r=o.get("busStopId");if(console.log("companyId = ",n),console.log("routeStr = ",s),console.log("busStopId = ",r),n&&s&&r){const t=await Object(c.getEstimateTimeArrival)(n,s,r);console.log("getEstimateTimeArrivalResult = ",t);let o={};t&&(o=t.data);const a={message:"getBusArrivalTime",busArrivalTime:o};e=new Response(JSON.stringify(a),{headers:{"Content-type":"application/json"},status:200})}else{const t={message:"getBusArrivalTime error, no companyId and routeStr and busStopId"};e=new Response(JSON.stringify(t),{headers:{"Content-type":"application/json"},status:400})}return e}),i.all("*",()=>new Response(JSON.stringify({message:"Not found"}),{headers:{"Content-type":"application/json"},status:400})),addEventListener("fetch",t=>{t.respondWith(i.handle(t.request))})}]);